# Copyright 2019 PrivateStorage.io, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2.1

orbs:
  # Get easier access to the Windows machine executor.
  win: "circleci/windows@4.1.1"

aliases:
  - &PREPARE_VIRTUALENV
    run:
      name: "Prepare virtualenv"
      command: |
        virtualenv venv
        . venv/bin/activate
        pip install --upgrade certifi pip
        pip install ${PIP_REQUIREMENTS}

  - nix_docker: &NIX_DOCKER
      # Run in a highly Nix-capable environment.
      - image: "nixos/nix:2.15.0"

  - nix_environ: &NIX_ENVIRON
      # Let us use features marked "experimental".  For example, most/all of
      # the `nix <subcommand>` forms.
      NIX_CONFIG: "experimental-features = nix-command flakes"

      # Pin a NixOS 21.11 revision.  Most of the software involved in the
      # build process is pinned by nix/sources.json with niv but a few things
      # need to work before we get that far.  This pin is for those things.
      # This pin has no particular bearing on what version of our dependencies
      # we are testing against, what version of Python we support, etc.  It is
      # part of CI infrastructure.
      NIXPKGS: "https://github.com/NixOS/nixpkgs/archive/28abc4e43a24d28729509e2d83f5c4f3b3418189.tar.gz"


jobs:
  windows-tests:
    parameters:
      py-version:
        type: "string"

    executor:
      # https://circleci.com/developer/orbs/orb/circleci/windows
      name: "win/server-2022"
      # resource class, can be "medium", "large", "xlarge", "2xlarge"
      size: "medium"
      # The default Windows machine image changes from time to time - which
      # often breaks things.  Avoid that.
      version: "2024.04.1"

    steps:
      # Commands are run in a Windows virtual machine environment
      - "checkout"
      - run:
          name: "Setup Environment"
          command: |
            py -<< parameters.py-version >> -c "# This err-exits if no Python of this version is installed"
            if (-not $?) { choco install python --version=<< parameters.py-version >> --confirm --allow-downgrade }
            py -<< parameters.py-version >> -V
            py -<< parameters.py-version >> -m pip install -v --upgrade pip wheel
            py -<< parameters.py-version >> -m pip install -v . -r requirements/test.in
            py -<< parameters.py-version >> -m pip freeze
      - run:
          name: "Run Tests"
          command: |
            py -<< parameters.py-version >> -m coverage run `
              --debug=config `
              --module twisted.trial `
                --rterrors `
                _zkapauthorizer

      - run:
          name: "Persist Coverage to Workspace"
          command: |
            mkdir -p coverage-workspace
            Copy-Item -Path ".coverage.*" -Destination "coverage-workspace"
            py -<< parameters.py-version >> -m coverage combine
            py -<< parameters.py-version >> -m coverage report

      - persist_to_workspace:
          root: "coverage-workspace"
          paths:
            - "*"


workflows:
  version: 2

  everything:
    jobs:
    - "windows-tests":
        matrix:
          parameters:
            py-version:
              - "3.9"
              - "3.10"
              - "3.11"
              - "3.12"
              - "3.13.0-rc2"
