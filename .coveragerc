[run]
source =
    _zkapauthorizer
    twisted.plugins.zkapauthorizer

# Measuring branch coverage is slower (so the conventional wisdom goes) but
# too bad: it's an important part of the coverage information.
branch = True

# Whether or not we actually collect coverage information in parallel, we need
# to have the coverage data files written according to the "parallel" naming
# scheme so that we can use "coverage combine" later to rewrite paths in the
# coverage report.
parallel = True

omit =
# The Versioneer version file in the repository is generated by
# Versioneer.  Let's call it Versioneer's responsibility to ensure it
# works and not pay attention to our test suite's coverage of it.  Also,
# the way Versioneer works is that the source file in the repository is
# different from the source file in an installation - which is where we
# measure coverage.  When the source files differ like this, it's very
# difficult to produce a coherent coverage report (measurements against
# one source file are meaningless when looking at a different source
# file).
    */_zkapauthorizer/_version.py

# Record absolute paths.  This makes `coverage combine` successfully rewrite
# paths from different systems as long as our `[paths]source` configuration is
# correct.
relative_files = False

[paths]
source =
        # This is the nice path we would like to end up with.  It must also be
        # where the source is actually available when `coverage combine` is
        # run.
       src/

       # A Nix build embeds source paths like this one.
       /nix/store/*-python*-circleci-python-coverage-*/lib/python*/site-packages/

       # A Windows build embeds source paths like this one.
       C:\tools\miniconda3\Lib\site-packages\

       # A macOS build embeds source paths like this one.
       /Users/distiller/project/venv/lib/python*/site-packages/
