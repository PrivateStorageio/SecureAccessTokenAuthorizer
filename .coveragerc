[run]
source =
    _zkapauthorizer
    twisted.plugins.zkapauthorizer

# Measuring branch coverage is slower (so the conventional wisdom goes) but
# too bad: it's an important part of the coverage information.
branch = True

# Whether or not we actually collect coverage information in parallel, we need
# to have the coverage data files written according to the "parallel" naming
# scheme so that we can use "coverage combine" later to rewrite paths in the
# coverage report.
parallel = True

omit =
# The Versioneer version file in the repository is generated by
# Versioneer.  Let's call it Versioneer's responsibility to ensure it
# works and not pay attention to our test suite's coverage of it.  Also,
# the way Versioneer works is that the source file in the repository is
# different from the source file in an installation - which is where we
# measure coverage.  When the source files differ like this, it's very
# difficult to produce a coherent coverage report (measurements against
# one source file are meaningless when looking at a different source
# file).
    */_zkapauthorizer/_version.py

# Record relative paths.  This makes it a bit easier to combine coverage data
# from different systems.  Specifically, it seems to be what makes `coverage
# combine` in the Nix build environment actually produce relative paths
# beneath `src/` instead of absolute paths inside /nix/store.  I don't
# *completely* understand why this setting matters to that behavior...
relative_files = true

[paths]
source =
# It looks like this in the checkout
    src/

# It looks like this in the Nix build environment
    /nix/store/*/lib/python*/site-packages/

# It looks like this in a virtualenv, like the macOS CI environment
    venv/lib/python3.9/site-packages

# There used to be a line for Windows here but Windows takes care of itself
# now.
