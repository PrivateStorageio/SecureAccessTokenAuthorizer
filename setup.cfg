# Generally describe the project
[metadata]
# See https://packaging.python.org/guides/distributing-packages-using-setuptools/#name
# for requiremnts of a valid project name.
name = zero-knowledge-access-pass-authorizer
version = attr: _zkapauthorizer.__version__
description = A `Tahoe-LAFS`_ storage-system plugin which authorizes storage operations based on privacy-respecting tokens.
long_description = file: README.rst, CHANGELOG.rst, LICENSE-2.0.txt
keywords = tahoe-lafs, storage, privacy, cryptography
license = Apache 2.0
classifiers =
    Framework :: Twisted
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
author = PrivateStorage.io, LLC
maintainer = PrivateStorage.io, LLC
home-page = https://privatestorage.io/
author-email = support@privatestorage.io
platform = POSIX

[options]
# All of the source is in the src directory.  The weird syntax is defining a
# dict with a key "" and a value "src".
package_dir =
    =src
# Explicitly list our packages because the automatic finder can't deal with
# the plugins package we want to ship.
packages =
    _zkapauthorizer
    _zkapauthorizer.tests
    twisted.plugins

install_requires =
    attrs
    zope.interface
    eliot
    aniso8601
    python-challenge-bypass-ristretto
    # The pip resolver sometimes finds treq's dependencies first and these are
    # incompatible with Tahoe-LAFS'.  So duplicate them here (the ones that
    # have been observed to cause problems).
    Twisted[tls,conch]>=18.4.0

    # Lease renewal changes aren't available from a release of Tahoe yet.
    # Note "Public index servers SHOULD NOT allow the use of direct references
    # in uploaded distributions."
    # https://www.python.org/dev/peps/pep-0440/#direct-references
    tahoe-lafs @ https://github.com/tahoe-lafs/tahoe-lafs/archive/d3c6f58a8ded7db3324ef97c47f5c1921c3d58b7.zip
    treq
    pyutil
    prometheus-client
    # Include colorama as a dependency to help pip-compile deal with multiple
    # platforms.  In particular, tqdm depends on colorama only on Windows. By
    # including it here, pip-compile will generate hashes (and install it) on
    # all platforms. colorama and pywin32 are our only depdencies that are only
    # required on some platforms; we can't include pywin32 here as it does not
    # install cross-platform.
    colorama

[options.extras_require]
test = coverage; fixtures; testtools; hypothesis

[versioneer]
VCS = git
style = pep440
versionfile_source = src/_zkapauthorizer/_version.py
versionfile_build = _zkapauthorizer/_version.py
tag_prefix = release-
parentdir_prefix = ZKAPAuthorizer
